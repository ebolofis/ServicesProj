@using  HitHelpersNetCore.Helpers;
@inject SmtpHelper SmtpHelper;
@using HitHelpersNetCore.Models' 
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<SmtpModel> smtplist = new List<SmtpModel>();
    List<string> serversNames = new List<string>();

    foreach (KeyValuePair<string,SmtpModel> pair in SmtpHelper._smhelper)
    {
        serversNames.Add(pair.Key);
        SmtpModel temp = new SmtpModel();
        temp.password = pair.Value.password;
        temp.username = pair.Value.username;
        temp.ssl = pair.Value.ssl;
        temp.smtp = pair.Value.smtp;
        temp.port = pair.Value.port;
        temp.sender = pair.Value.sender;
        smtplist.Add(temp);
    }

}


<link rel="stylesheet" href="~/css/Configuration/configuration.css" />
<link rel="stylesheet" href="~/css/Plugins/Plugins.css">
<script src="~/js/Smtp/Smtp.js"></script>
<div class="b1psb">
    <div class="custom-flex-row custom-flex-100 divstyle">
        <div class="custom-flex-100 custom-flex-center">
            <h1> SMTP Configuration</h1>
        </div>
    </div>
    <input class='text-input custom-flex-100' style="visibility:hidden" id='servername' name='phone' type='phone' value="@serversNames[0]" />
    <h1>&nbsp;<span style="color:black;">  Server Name : </span> @serversNames[0]</h1>
    <form action='' class='form custom-flex-row  custom-flex-100' style="        margin-top: 5px;
        border: 2px solid black;
        padding: 20px;
">

        <p class='field ' style="font-size:20px"> Settings        </p>
        <p class='field half'>
            <label>Smtp Server</label>
            <input class='text-input custom-flex-100' id='smtp' name='phone' type='phone' value="@smtplist[0].smtp" />
        </p>
        <p class='field half'>
            <label>Port</label>
            <input class='text-input' id='port' min="0" max="65535" type='number' value="@smtplist[0].port">
        </p>
        <p class='field required half'>
            <label>Username</label>
            <input class='text-input' id='username' name='email' required type='text' value="@smtplist[0].username">
        </p>
        <p class='field half'>
            <label>Password</label>
            <input class='text-input' id='password' name='phone' type='password' value="@smtplist[0].password">
        </p>
        <p class='field required half'>
            <label>Sender</label>
            <input class='text-input' id='sender' name='email' required type='email' value="@smtplist[0].sender">
        </p>

        @if (smtplist[0].ssl == "1" || smtplist[0].ssl == "true")
        {
            <p class='field half'>
                <label class="container-checkbox" style="margin-left:100px;">
                    Ssl
                    <input type="checkbox" checked="checked" id="ssl">
                    <span class="checkmark"></span>
                </label>
            </p>
        }
        else
        {
            <p class='field half'>
                <label class="container-checkbox" style="margin-left:100px;">
                    Ssl
                    <input type="checkbox" id="ssl">
                    <span class="checkmark"></span>
                </label>
            </p>
        }
        <p class='field half'>

        </p>
        <p class='field half'>
            <input class='button' value='Save' style=" width:75%; margin: 0px 50px !important;border: 1px solid black;" onclick="SaveConfiguration()">
        </p>
        <div  style="border-bottom:1px solid black"></div>
        <p class='field ' style="margin-top:5px;font-size:20px;border-top:1px solid black;"> Test Connectivity        </p>
        <p class='field half'>
            <label>To :</label>
            <input class='text-input custom-flex-100' id='testemail' name='phone' type='phone' />
        </p>

        <p class='field half'>
            <input class='button' value='Test Email' style="  width: 75%;margin: 0px 50px !important;border: 1px solid black;" onclick="testEmail()">
        </p>
    </form>

</div>


<style>
    /* The container */
    .container-checkbox {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size: 22px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        /* Hide the browser's default checkbox */
        .container-checkbox input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

        /* Create a custom checkbox */
        .container-checkbox .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 25px;
            width: 25px;
            background-color: #eee;
        }

        /* On mouse-over, add a grey background color */
        .container-checkbox:hover input ~ .checkmark {
            background-color: #ccc;
        }

        /* When the checkbox is checked, add a blue background */
        .container-checkbox input:checked ~ .checkmark {
            background-color: #2196F3;
        }

        /* Create the checkmark/indicator (hidden when not checked) */
        .container-checkbox .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        /* Show the checkmark when checked */
        .container-checkbox input:checked ~ .checkmark:after {
            display: block;
        }

        /* Style the checkmark/indicator */
        .container-checkbox .checkmark:after {
            left: 9px;
            top: 5px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 3px 3px 0;
            -webkit-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            transform: rotate(45deg);
        }


    /* The container */
    .container-radio {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size: 22px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        /* Hide the browser's default radio button */
        .container-radio input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

        /* Create a custom radio button */
        .container-radio .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 25px;
            width: 25px;
            background-color: #eee;
            border-radius: 50%;
        }

        /* On mouse-over, add a grey background color */
        .container-radio:hover input ~ .checkmark {
            background-color: #ccc;
        }

        /* When the radio button is checked, add a blue background */
        .container-radio input:checked ~ .checkmark {
            background-color: #2196F3;
        }

        /* Create the indicator (the dot/circle - hidden when not checked) */
        .container-radio .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        /* Show the indicator (dot/circle) when checked */
        .container-radio input:checked ~ .checkmark:after {
            display: block;
        }

        /* Style the indicator (dot/circle) */
        .container-radio .checkmark:after {
            top: 9px;
            left: 9px;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: white;
        }
    html {
        -webkit-font-smoothing: antialiased;
    }

    body {
        background-color: white;
        font-family: "Titillium Web", sans-serif;
    }

    @@media screen and (min-width: 40em) {
        body {
            padding: 0px 0px !important;
        }
    }

    .form .label, .form .checkbox-input + label, .form .option-input + label, .form .text-input, .form .textarea, .form .select, .customSelect, .form .message, .form .button {
        padding: 0.75em 1em;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        outline: none;
        line-height: normal;
        border-radius: 0;
        border: none;
        background: none;
        display: block;
    }

    .form .label {
        font-weight: bold;
        color: white;
        padding-top: 0;
        padding-left: 0;
        letter-spacing: 0.025em;
        font-size: 1.125em;
        line-height: 1.25;
        position: relative;
        z-index: 100;
    }

    .required .form .label:after, .form .required .label:after {
        content: " *";
        color: #E8474C;
        font-weight: normal;
        font-size: 0.75em;
        vertical-align: top;
    }

    .form .checkbox-input + label, .form .option-input + label, .form .text-input, .form .textarea, .form .select, .customSelect {
        font: inherit;
        line-height: normal;
        width: 100%;
        box-sizing: border-box;
        background: #222222;
        color: white;
        position: relative;
    }

        .form .checkbox-input + label:placeholder, .form .option-input + label:placeholder, .form .text-input:placeholder, .form .textarea:placeholder, .form .select:placeholder, .customSelect:placeholder {
            color: white;
        }

        .form .checkbox-input + label:-webkit-autofill, .form .option-input + label:-webkit-autofill, .form .text-input:-webkit-autofill, .form .textarea:-webkit-autofill, .form .select:-webkit-autofill, .customSelect:-webkit-autofill {
            box-shadow: 0 0 0px 1000px #111111 inset;
            -webkit-text-fill-color: white;
            border-top-color: #111111;
            border-left-color: #111111;
            border-right-color: #111111;
        }

        .form .checkbox-input + label:not(:focus):not(:active).error, .form .option-input + label:not(:focus):not(:active).error, .form .text-input:not(:focus):not(:active).error, .form .textarea:not(:focus):not(:active).error, .form .select:not(:focus):not(:active).error, .customSelect:not(:focus):not(:active).error, .error .form .checkbox-input + label:not(:focus):not(:active), .form .error .checkbox-input + label:not(:focus):not(:active), .error .form .option-input + label:not(:focus):not(:active), .form .error .option-input + label:not(:focus):not(:active), .error .form .text-input:not(:focus):not(:active), .form .error .text-input:not(:focus):not(:active), .error .form .textarea:not(:focus):not(:active), .form .error .textarea:not(:focus):not(:active), .error .form .select:not(:focus):not(:active), .form .error .select:not(:focus):not(:active), .error .customSelect:not(:focus):not(:active) {
            background-size: 8px 8px;
            background-image: linear-gradient(135deg, rgba(232, 71, 76, 0.5), rgba(232, 71, 76, 0.5) 25%, transparent 25%, transparent 50%, rgba(232, 71, 76, 0.5) 50%, rgba(232, 71, 76, 0.5) 75%, transparent 75%, transparent);
            background-repeat: repeat;
        }

    .form:not(.has-magic-focus) .checkbox-input + label:active, .form:not(.has-magic-focus) .option-input + label:active, .form:not(.has-magic-focus) .text-input:active, .form:not(.has-magic-focus) .textarea:active, .form:not(.has-magic-focus) .select:active, .form:not(.has-magic-focus) .customSelect:active, .form:not(.has-magic-focus) .customSelect.customSelectFocus, .form:not(.has-magic-focus) .checkbox-input + label:focus, .form:not(.has-magic-focus) .option-input + label:focus, .form:not(.has-magic-focus) .text-input:focus, .form:not(.has-magic-focus) .textarea:focus, .form:not(.has-magic-focus) .select:focus, .form:not(.has-magic-focus) .customSelect:focus {
        background: #4E4E4E;
    }

    .form .message {
        position: absolute;
        bottom: 0;
        right: 0;
        z-index: 100;
        font-size: 0.625em;
        color: white;
    }

    .form .checkbox-input, .form .option-input {
        border: 0;
        clip: rect(0 0 0 0);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
    }

        .form .checkbox-input + label, .form .option-input + label {
            display: inline-block;
            width: auto;
            color: #4E4E4E;
            position: relative;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            cursor: pointer;
        }

        .form .checkbox-input:focus + label, .form .option-input:focus + label, .form .checkbox-input:active + label, .form .option-input:active + label {
            color: #4E4E4E;
        }

        .form .checkbox-input:checked + label, .form .option-input:checked + label {
            color: white;
        }

    .form .button {
        font: inherit;
        line-height: normal;
        cursor: pointer;
        background: #E8474C;
        color: white;
        font-weight: bold;
        width: auto;
        margin-left: auto;
        font-weight: bold;
        padding-left: 2em;
        padding-right: 2em;
    }

        .form .button:hover, .form .button:focus, .form .button:active {
            color: white;
            border-color: white;
        }

        .form .button:active {
            position: relative;
            top: 1px;
            left: 1px;
        }

    body {
        padding: 2em;
    }

    .form {
        max-width: 40em;
        margin: 0 auto;
        position: relative;
        display: -webkit-box;
        display: flex;
        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
        flex-flow: row wrap;
        -webkit-box-pack: justify;
        justify-content: space-between;
        -webkit-box-align: end;
        align-items: flex-end;
    }

        .form .field {
            width: 100%;
            margin: 0 0 1.5em 0;
        }

    @@media screen and (min-width: 40em) {
        .form .field.half {
            width: calc(50% - 1px);
        }
    }

    .form .field.last {
        margin-left: auto;
    }

    .form .textarea {
        max-width: 100%;
    }

    .form .select {
        text-indent: 0.01px;
        text-overflow: "" !important;
    }

        .form .select::-ms-expand {
            display: none;
        }

    .form .checkboxes, .form .options {
        padding: 0;
        margin: 0;
        list-style-type: none;
        overflow: hidden;
    }

    .form .checkbox, .form .option {
        float: left;
        margin: 1px;
    }

    .customSelect {
        pointer-events: none;
    }

        .customSelect:after {
            content: "";
            pointer-events: none;
            width: 0.5em;
            height: 0.5em;
            border-style: solid;
            border-color: white;
            border-width: 0 3px 3px 0;
            position: absolute;
            top: 50%;
            margin-top: -0.625em;
            right: 1em;
            -webkit-transform-origin: 0 0;
            transform-origin: 0 0;
            -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
        }

        .customSelect.customSelectFocus:after {
            border-color: white;
        }

    .magic-focus {
        position: absolute;
        z-index: 0;
        width: 0;
        pointer-events: none;
        background: rgba(255, 255, 255, 0.15);
        -webkit-transition: top 0.2s, left 0.2s, width 0.2s;
        transition: top 0.2s, left 0.2s, width 0.2s;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        -webkit-transform-style: preserve-3d;
        transform-style: preserve-3d;
        will-change: top, left, width;
        -webkit-transform-origin: 0 0;
        transform-origin: 0 0;
    }
</style>

<script>
    
</script>